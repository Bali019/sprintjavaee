package com.edu.PiJEE;
// Generated 17 nov. 2016 21:49:43 by Hibernate Tools 4.3.1.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Collocationoffre generated by hbm2java
 */
@Entity
@Table(name = "collocationoffre", catalog = "room")
public class Collocationoffre implements java.io.Serializable {

	private Integer collocationOffreId;
	private User user;
	private String titre;
	private Date dateCreation;
	private String region;
	private String adressVille;
	private String adressRue;
	private int adressCodePostal;
	private int tel;
	private int price;
	private int nbrDeBinom;
	private String imageUrl;
	private String description;
	private String criterecoll;
	private Set<Groupcollocation> groupcollocations = new HashSet<Groupcollocation>(0);

	public Collocationoffre() {
	}

	public Collocationoffre(Date dateCreation, int adressCodePostal, int tel, int price, int nbrDeBinom) {
		this.dateCreation = dateCreation;
		this.adressCodePostal = adressCodePostal;
		this.tel = tel;
		this.price = price;
		this.nbrDeBinom = nbrDeBinom;
	}

	public Collocationoffre(User user, String titre, Date dateCreation, String region, String adressVille,
			String adressRue, int adressCodePostal, int tel, int price, int nbrDeBinom, String imageUrl,
			String description, String criterecoll, Set<Groupcollocation> groupcollocations) {
		this.user = user;
		this.titre = titre;
		this.dateCreation = dateCreation;
		this.region = region;
		this.adressVille = adressVille;
		this.adressRue = adressRue;
		this.adressCodePostal = adressCodePostal;
		this.tel = tel;
		this.price = price;
		this.nbrDeBinom = nbrDeBinom;
		this.imageUrl = imageUrl;
		this.description = description;
		this.criterecoll = criterecoll;
		this.groupcollocations = groupcollocations;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "CollocationOffreId", unique = true, nullable = false)
	public Integer getCollocationOffreId() {
		return this.collocationOffreId;
	}

	public void setCollocationOffreId(Integer collocationOffreId) {
		this.collocationOffreId = collocationOffreId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "iduser")
	public User getUser() {
		return this.user;
	}

	public void setUser(User user) {
		this.user = user;
	}

	@Column(name = "Titre")
	public String getTitre() {
		return this.titre;
	}

	public void setTitre(String titre) {
		this.titre = titre;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DateCreation", nullable = false, length = 19)
	public Date getDateCreation() {
		return this.dateCreation;
	}

	public void setDateCreation(Date dateCreation) {
		this.dateCreation = dateCreation;
	}

	@Column(name = "Region")
	public String getRegion() {
		return this.region;
	}

	public void setRegion(String region) {
		this.region = region;
	}

	@Column(name = "adress_Ville")
	public String getAdressVille() {
		return this.adressVille;
	}

	public void setAdressVille(String adressVille) {
		this.adressVille = adressVille;
	}

	@Column(name = "adress_Rue")
	public String getAdressRue() {
		return this.adressRue;
	}

	public void setAdressRue(String adressRue) {
		this.adressRue = adressRue;
	}

	@Column(name = "adress_CodePostal", nullable = false)
	public int getAdressCodePostal() {
		return this.adressCodePostal;
	}

	public void setAdressCodePostal(int adressCodePostal) {
		this.adressCodePostal = adressCodePostal;
	}

	@Column(name = "Tel", nullable = false)
	public int getTel() {
		return this.tel;
	}

	public void setTel(int tel) {
		this.tel = tel;
	}

	@Column(name = "Price", nullable = false)
	public int getPrice() {
		return this.price;
	}

	public void setPrice(int price) {
		this.price = price;
	}

	@Column(name = "nbr_de_binom", nullable = false)
	public int getNbrDeBinom() {
		return this.nbrDeBinom;
	}

	public void setNbrDeBinom(int nbrDeBinom) {
		this.nbrDeBinom = nbrDeBinom;
	}

	@Column(name = "ImageUrl")
	public String getImageUrl() {
		return this.imageUrl;
	}

	public void setImageUrl(String imageUrl) {
		this.imageUrl = imageUrl;
	}

	@Column(name = "Description")
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Column(name = "criterecoll")
	public String getCriterecoll() {
		return this.criterecoll;
	}

	public void setCriterecoll(String criterecoll) {
		this.criterecoll = criterecoll;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "collocationoffrecollocationgroup", catalog = "room", joinColumns = {
			@JoinColumn(name = "CollocationOffre_CollocationOffreId", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "CollocationGroup_CollocationGroupId", nullable = false, updatable = false) })
	public Set<Groupcollocation> getGroupcollocations() {
		return this.groupcollocations;
	}

	public void setGroupcollocations(Set<Groupcollocation> groupcollocations) {
		this.groupcollocations = groupcollocations;
	}

}
