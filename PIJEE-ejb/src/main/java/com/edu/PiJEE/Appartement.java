package com.edu.PiJEE;
// Generated 17 nov. 2016 21:49:43 by Hibernate Tools 4.3.1.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Appartement generated by hbm2java
 */
@Entity
@Table(name = "appartement", catalog = "room")
public class Appartement implements java.io.Serializable {

	private Integer appartementId;
	private User user;
	private String adresseAppartement;
	private int roomNumber;
	private String description;
	private int price;
	private boolean islocated;
	private String rentaltype;
	private Date datePublication;
	private float longitude;
	private float lattitude;
	private Set<User> users = new HashSet<User>(0);

	public Appartement() {
	}

	public Appartement(int roomNumber, int price, boolean islocated, Date datePublication, float longitude,
			float lattitude) {
		this.roomNumber = roomNumber;
		this.price = price;
		this.islocated = islocated;
		this.datePublication = datePublication;
		this.longitude = longitude;
		this.lattitude = lattitude;
	}

	public Appartement(User user, String adresseAppartement, int roomNumber, String description, int price,
			boolean islocated, String rentaltype, Date datePublication, float longitude, float lattitude,
			Set<User> users) {
		this.user = user;
		this.adresseAppartement = adresseAppartement;
		this.roomNumber = roomNumber;
		this.description = description;
		this.price = price;
		this.islocated = islocated;
		this.rentaltype = rentaltype;
		this.datePublication = datePublication;
		this.longitude = longitude;
		this.lattitude = lattitude;
		this.users = users;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "AppartementId", unique = true, nullable = false)
	public Integer getAppartementId() {
		return this.appartementId;
	}

	public void setAppartementId(Integer appartementId) {
		this.appartementId = appartementId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "appartementOwner_Id")
	public User getUser() {
		return this.user;
	}

	public void setUser(User user) {
		this.user = user;
	}

	@Column(name = "adresseAppartement")
	public String getAdresseAppartement() {
		return this.adresseAppartement;
	}

	public void setAdresseAppartement(String adresseAppartement) {
		this.adresseAppartement = adresseAppartement;
	}

	@Column(name = "RoomNumber", nullable = false)
	public int getRoomNumber() {
		return this.roomNumber;
	}

	public void setRoomNumber(int roomNumber) {
		this.roomNumber = roomNumber;
	}

	@Column(name = "Description")
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Column(name = "Price", nullable = false)
	public int getPrice() {
		return this.price;
	}

	public void setPrice(int price) {
		this.price = price;
	}

	@Column(name = "Islocated", nullable = false)
	public boolean isIslocated() {
		return this.islocated;
	}

	public void setIslocated(boolean islocated) {
		this.islocated = islocated;
	}

	@Column(name = "rentaltype")
	public String getRentaltype() {
		return this.rentaltype;
	}

	public void setRentaltype(String rentaltype) {
		this.rentaltype = rentaltype;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "date_publication", nullable = false, length = 19)
	public Date getDatePublication() {
		return this.datePublication;
	}

	public void setDatePublication(Date datePublication) {
		this.datePublication = datePublication;
	}

	@Column(name = "longitude", nullable = false, precision = 12, scale = 0)
	public float getLongitude() {
		return this.longitude;
	}

	public void setLongitude(float longitude) {
		this.longitude = longitude;
	}

	@Column(name = "lattitude", nullable = false, precision = 12, scale = 0)
	public float getLattitude() {
		return this.lattitude;
	}

	public void setLattitude(float lattitude) {
		this.lattitude = lattitude;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "appartementuser", catalog = "room", joinColumns = {
			@JoinColumn(name = "Appartement_AppartementId", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "User_Id", nullable = false, updatable = false) })
	public Set<User> getUsers() {
		return this.users;
	}

	public void setUsers(Set<User> users) {
		this.users = users;
	}

}
