package com.edu.PiJEE;
// Generated 17 nov. 2016 21:49:43 by Hibernate Tools 4.3.1.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Groupcollocation generated by hbm2java
 */
@Entity
@Table(name = "groupcollocation", catalog = "room")
public class Groupcollocation implements java.io.Serializable {

	private Integer collocationGroupId;
	private Date dateCreation;
	private int nombreDeMebre;
	private String title;
	private String groupeType;
	private Set<Collocationoffre> collocationoffres = new HashSet<Collocationoffre>(0);
	private Set<User> users = new HashSet<User>(0);
	private Set<Discution> discutions = new HashSet<Discution>(0);
	private Set<Carpool> carpools = new HashSet<Carpool>(0);

	public Groupcollocation() {
	}

	public Groupcollocation(Date dateCreation, int nombreDeMebre) {
		this.dateCreation = dateCreation;
		this.nombreDeMebre = nombreDeMebre;
	}

	public Groupcollocation(Date dateCreation, int nombreDeMebre, String title, String groupeType,
			Set<Collocationoffre> collocationoffres, Set<User> users, Set<Discution> discutions,
			Set<Carpool> carpools) {
		this.dateCreation = dateCreation;
		this.nombreDeMebre = nombreDeMebre;
		this.title = title;
		this.groupeType = groupeType;
		this.collocationoffres = collocationoffres;
		this.users = users;
		this.discutions = discutions;
		this.carpools = carpools;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "CollocationGroupId", unique = true, nullable = false)
	public Integer getCollocationGroupId() {
		return this.collocationGroupId;
	}

	public void setCollocationGroupId(Integer collocationGroupId) {
		this.collocationGroupId = collocationGroupId;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DateCreation", nullable = false, length = 19)
	public Date getDateCreation() {
		return this.dateCreation;
	}

	public void setDateCreation(Date dateCreation) {
		this.dateCreation = dateCreation;
	}

	@Column(name = "NombreDeMebre", nullable = false)
	public int getNombreDeMebre() {
		return this.nombreDeMebre;
	}

	public void setNombreDeMebre(int nombreDeMebre) {
		this.nombreDeMebre = nombreDeMebre;
	}

	@Column(name = "Title")
	public String getTitle() {
		return this.title;
	}

	public void setTitle(String title) {
		this.title = title;
	}

	@Column(name = "GroupeType")
	public String getGroupeType() {
		return this.groupeType;
	}

	public void setGroupeType(String groupeType) {
		this.groupeType = groupeType;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "collocationoffrecollocationgroup", catalog = "room", joinColumns = {
			@JoinColumn(name = "CollocationGroup_CollocationGroupId", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "CollocationOffre_CollocationOffreId", nullable = false, updatable = false) })
	public Set<Collocationoffre> getCollocationoffres() {
		return this.collocationoffres;
	}

	public void setCollocationoffres(Set<Collocationoffre> collocationoffres) {
		this.collocationoffres = collocationoffres;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "collogroups_users", catalog = "room", joinColumns = {
			@JoinColumn(name = "group_fk", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "user_fk", nullable = false, updatable = false) })
	public Set<User> getUsers() {
		return this.users;
	}

	public void setUsers(Set<User> users) {
		this.users = users;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "groupcollocation")
	public Set<Discution> getDiscutions() {
		return this.discutions;
	}

	public void setDiscutions(Set<Discution> discutions) {
		this.discutions = discutions;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "carpool_group", catalog = "room", joinColumns = {
			@JoinColumn(name = "group_fk", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "carpool_fk", nullable = false, updatable = false) })
	public Set<Carpool> getCarpools() {
		return this.carpools;
	}

	public void setCarpools(Set<Carpool> carpools) {
		this.carpools = carpools;
	}

}
